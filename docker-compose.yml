version: '3'
services:

    #PHP Service
    app:
        build:
            context: ./
            dockerfile: docker/php/Dockerfile
        depends_on:
            - mysql
        container_name: app
        working_dir: ${WORKING_DIR}
        environment:
            APP_ENV: local
            XDEBUG_CONFIG: remote_host=host.docker.internal remote_port=9000 # for xdebug
            PHP_IDE_CONFIG: serverName=docker # for xdebug servername
        volumes:
            - ./:${WORKING_DIR}
            - ./docker/php/conf.d/local.ini:/usr/local/etc/php/conf.d/local.ini
            - ./docker/php/conf.d/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
            #      - ./docker/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini # comment out this will disable xdebug
            - ./docker/supervisord/supervisord.conf:/etc/supervisor/supervisord.conf # mapping supervisord.conf
        networks:
            - app-network

    #Nginx Service
    webserver:
        image: nginx:alpine
        container_name: webserver
        working_dir: ${WORKING_DIR}
        depends_on:
            - app
        ports:
            - ${HTTP_PORT}:80
            - ${HTTPS_PORT}:443
        volumes:
            - ./:${WORKING_DIR}
            - ./docker/nginx/logs:/var/log/nginx
            - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
        networks:
            - app-network

    #Database
    mysql:
        image: mariadb:10.2
        container_name: mysql
        command: [ '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci','--default-authentication-plugin=mysql_native_password' ]
        environment:
            DB_CONNECTION: "${DB_CONNECTION}"
            MYSQL_DATABASE: "${MYSQL_DATABASE}"
            MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
            MYSQL_USER: "${MYSQL_USER}"
            MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
        ports:
            - "3306:3306"
        volumes:
            - ./docker/db/dbdata:/var/lib/mysql
            - ./docker/db/my.cnf:/etc/mysql/conf.d/my.cnf
        networks:
            - app-network

    composer:
        image: 'composer:2.2'

    elasticsearch:
        image: elasticsearch:7.8.0
        container_name: escontainer
        environment:
            - "discovery.type=single-node"
            - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
        ports:
            - "9200:9200"
            - "9300:9300"
        networks:
            - app-network

#Docker Networks
networks:
    app-network:
        driver: bridge

volumes:
    dbdata:
        driver: local
