server {
      listen 80;
      index index.php index.html;
      root /var/www/src/pub;
      error_log  /var/log/nginx/error.log;
      access_log /var/log/nginx/access.log;
      proxy_set_header HTTP_AUTHORIZATION $http_authorization;
    
      location / {
          try_files $uri /index.php?$args;
      }

      location ~ \.php$ {
          fastcgi_split_path_info ^(.+\.php)(/.+)$;
          fastcgi_pass app:9000;
          include fastcgi_params;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          fastcgi_param PATH_INFO $fastcgi_path_info;
          sendfile off;
      }

      location /static/ {
          # Uncomment the following line in production mode
          # expires max;

          # Remove signature of the static files that is used to overcome the browser cache
          location ~ ^/static/version {
              rewrite ^/static/(version\d*/)?(.*)$ /static/$2 last;
          }

          location ~* \.(ico|jpg|jpeg|png|gif|svg|js|css|swf|eot|ttf|otf|woff|woff2)$ {
              add_header Cache-Control "public";
              add_header X-Frame-Options "SAMEORIGIN";
              expires +1y;

              if (!-f $request_filename) {
                  rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
              }
          }
          location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
              add_header Cache-Control "no-store";
              add_header X-Frame-Options "SAMEORIGIN";
              expires    off;

              if (!-f $request_filename) {
                 rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
              }
          }
          if (!-f $request_filename) {
              rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
          }
          add_header X-Frame-Options "SAMEORIGIN";
      }
}